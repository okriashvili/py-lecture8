# python functions
# ფუნქციები შესაქმნელად საჭიროა def საკვანძო სიტყვა
def my_function() :
    print("Hello World")

# fფუნქციის გამოძახება ხდება ფუნქციის სახელით =, ისევე როგორც ჯავასკრიპტში
print(my_function())



def func() :
    return "hello world"
# ზიგადად ფუნქციამ რაფერი უნდა დაბეჭდოს, ფუქნციმ შედეგი უნდა დააბრნუნოს
# დაბეჭვდას იმისთვის ვიყენებთ რომ დაბრუნებული შედეგი დავინახოთ

print(func())


# def math_function() :
#     num1 = int(input("Enter a number: "))
#     num2 = int(input("Enter another number: "))
#     result = num1 + num2
#     return result
# ფუნქციაში არ უნდა განვიყენოთ print() ფუქნცია, რადგნაც ფუქნციის გამოძახებუს შემთხვევაში ის დაპრინტავს noneს
# თუკი ფუნქციამ არაფერი დააბრუნა, მსგავი ფუქნცია დაგვიპრინტავს ons
# print ბეჭდავს!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# return აბრუნებს !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# ჩვენ გვინდა რომ დააბრუნოს



# პარამეტრები ფუქნციებში
def funtion1(x, y, z) :
# პარამეტრი ქვია ფუქნციაში შიგნითვე გადაცემულ ცვლადს
# ფუქნციის გამოძახებისას არა ფუქნციაში, არამედ () ფრჩხილებში გადავცემთ ცლადებს
    return x + y
print(funtion1(1,3, 6))
# არგუმენტები არის პარამეტრებისთვის გადაცემული მნიშვნელობა
# როდესაც ვიძახებთ ფუქცნციას, გადქაცემული პარამეტრებს უნდა მივანიჭოთ არგუმენტები
# რამდენი პარამტერიც გვაქვს იმდენი არგუმენტი უნდა გადავცეთ ფუნქციას
# მიუხედავად იმისა პარამეტრს ვიძახებთ თუ არა


def sum_numbers(x, y):
    return x + y
a = "hello world "
b = "privetebi"
print(sum_numbers(a, b))
# შეგვიძლია გადავცეთ ცვლადებიც არგუმენტებად



# built in functions in python
# ჩაშენებული ფუნქციები,  ფუნქციები რაც უკვე ჩაშენებულია და დაწერილია პითონში: print(), sum(), math() და ა შ


# მოდულები პითონში: math() მოდული
# ჩაშენებული მოდული, რომელიც გვეხმარება მათემატიკური მაგალითების შესრულებისათვის:
# ჯერ ვიძახებთ math() მოდულს
import math
print(math.sqrt(9))
print(math.pi)
# შეგვიძლია გამოვიძახოთ უშალოდ math მოდული, როლესაც ყველანაირი მათემატიკური ფუნქციები მოყვება
# მაგ: pi, ფესვი, კუბი და ა შ:
# მათ გამოსაძახებლად კი დაგვჭირდება წინ math საკვანძო სიტყვა და შემგომ იმ ფუნქციის დასახელება რომელსაც ვასრულებთ:
# მაგ: math.pi

# ან შეგვიძლია უშუალოდ, მხოლოდ მათემატიკური ფუნქცია გამოვიძახოთ და არა მთლიანი math მოდული
# 1: ამ შემთხვევაში ვიძახებთ from საკვანძო სიტყვით
# 2: შემდომ ვუწერთ math მოდულს
# 3: from mathდან ვაიმპორტებთ import საკვანძო სიტყვით
# 4: ბოლოდ კი ვიძახებთ კონკრეტულ ფუნქციას
from math import pi
print(pi)
# გამოვიძახეთ კოკრეტულად pi ფუქნცია, რომლის გამოსაძახებლად math. საკვანძო სიტყვა აღარაა საჭირო
from math import pi, sqrt
print(sqrt(9))
print(math.factorial(5))
# შეგვიძლია ერთდროულად რამდენიმე კონკრეტული ფუქნცია გამოვიძახოთ, რომელსაც ერთამნეთისგან გამოვყოფთ მძიმით:

# მოდულების გამოძახება შეგვიძლია ჩვენითაც: ევქმნათ ახალი ფაილი, და იმ ფაილიდან გამოვიძახოთ კონკრეტული ფუნქცია
# from index import sum_numbers:

# choice გვიბრუნებს გადაცემული მნიშვნელობებიდან, რენდომულად ერთ კონკრეტულ ციფრს
from random import choice
print(f"რენდომულად მიღებული ციფრი :{choice(range(0, 100))}")

# შეგვიძლია რენდომულად გადავცეთ სახელების ლისტი და ლისტიდან რემდომულად დაგვიბრუნებს სახელებს ან კონკრეტულ ელემენტებს



































